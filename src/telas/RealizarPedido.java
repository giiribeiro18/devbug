/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import classes.CheckDados;
import classes.Cliente;
import classes.ItemPedido;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import classes.ManipuladorArquivo;
import classes.Motoboy;
import classes.Pedido;
import classes.Produto;
import java.text.DecimalFormat;

/**
 *
 * @author Victor
 */
public class RealizarPedido extends javax.swing.JFrame {
    private Cliente cliente;
    private ArrayList<Produto> produtos;
    private ArrayList<ItemPedido> carrinho;
    private ArrayList<Motoboy> motoboysDisponiveis = new ArrayList<Motoboy>();
    
    /**
     * Creates new form RealizarPedido
     */
    public RealizarPedido() {
        initComponents();
        
        try {
            carregarMotoboysDisponiveis();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao carregar os motoboys!", "Erro", JOptionPane.PLAIN_MESSAGE);
            this.setVisible(false);
            return;
        }
        
        // exibe somente a tela de Login
        jpLogin.setVisible(true);
        jpSelecionarProdutos.setVisible(false);
        jpConfirmacao.setVisible(false);
        
        jlErro.setVisible(false); // mensagem de erro não aparece
        
        carregarMetodosDePagamento(); // inclui as opções de pagamento no comboBox
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpConfirmacao = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaEndereco = new javax.swing.JTextArea();
        jlCadastros = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jlNomeProduto = new javax.swing.JLabel();
        jlDesconto = new javax.swing.JLabel();
        jlComissao = new javax.swing.JLabel();
        jlSubtotal1 = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jlNomeProduto1 = new javax.swing.JLabel();
        jlNomeCliente = new javax.swing.JLabel();
        btnNovoProduto4 = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        jlNomeProduto2 = new javax.swing.JLabel();
        jlNomeMotoboy = new javax.swing.JLabel();
        jlFormaDePagamento = new javax.swing.JLabel();
        cmbFormaDePagamento = new javax.swing.JComboBox<>();
        jpSelecionarProdutos = new javax.swing.JPanel();
        cmbProdutos = new javax.swing.JComboBox<>();
        jlDescricaoProduto1 = new javax.swing.JLabel();
        btnAdicionarProduto = new javax.swing.JButton();
        btnVoltarProduto = new javax.swing.JButton();
        jlDescricaoProduto2 = new javax.swing.JLabel();
        jlSubtotal = new javax.swing.JLabel();
        jsQuantidade = new javax.swing.JSpinner();
        btnAvancarProduto = new javax.swing.JButton();
        jlTituloSelecionarProdutos = new javax.swing.JLabel();
        jpLogin = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        btnEntrar = new javax.swing.JButton();
        jlEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jlSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        jlErro = new javax.swing.JLabel();
        btnEntrar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login");
        setBackground(new java.awt.Color(234, 29, 44));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_uaifood.png")).getImage());
        setMaximumSize(null);
        setResizable(false);
        setSize(new java.awt.Dimension(360, 640));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpConfirmacao.setBackground(new java.awt.Color(234, 29, 44));
        jpConfirmacao.setPreferredSize(new java.awt.Dimension(360, 640));

        jtaEndereco.setBackground(new java.awt.Color(234, 29, 44));
        jtaEndereco.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jtaEndereco.setForeground(new java.awt.Color(255, 255, 255));
        jtaEndereco.setRows(5);
        jtaEndereco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jScrollPane1.setViewportView(jtaEndereco);

        jlCadastros.setFont(new java.awt.Font("Sul Sans", 0, 24)); // NOI18N
        jlCadastros.setForeground(new java.awt.Color(255, 255, 255));
        jlCadastros.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCadastros.setText("Confirmação");

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jSeparator1.setMinimumSize(new java.awt.Dimension(50, 2));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 2));
        jSeparator1.setVerifyInputWhenFocusTarget(false);

        jlNomeProduto.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlNomeProduto.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeProduto.setText("Endereço:");

        jlDesconto.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        jlDesconto.setForeground(new java.awt.Color(255, 255, 255));
        jlDesconto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlDesconto.setText("Desconto: R$0,00");

        jlComissao.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        jlComissao.setForeground(new java.awt.Color(255, 255, 255));
        jlComissao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlComissao.setText("Frete: R$0,00");

        jlSubtotal1.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        jlSubtotal1.setForeground(new java.awt.Color(255, 255, 255));
        jlSubtotal1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSubtotal1.setText("Subtotal: R$0,00");

        jlTotal.setFont(new java.awt.Font("Sul Sans", 0, 24)); // NOI18N
        jlTotal.setForeground(new java.awt.Color(255, 255, 255));
        jlTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTotal.setText("Total: R$0,00");

        jlNomeProduto1.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlNomeProduto1.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeProduto1.setText("Nome:");

        jlNomeCliente.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        jlNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlNomeCliente.setText("Nome do Cliente");

        btnNovoProduto4.setBackground(new java.awt.Color(234, 29, 44));
        btnNovoProduto4.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnNovoProduto4.setForeground(new java.awt.Color(255, 255, 255));
        btnNovoProduto4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_fechar_branco.png"))); // NOI18N
        btnNovoProduto4.setText("Cancelar");
        btnNovoProduto4.setBorder(null);
        btnNovoProduto4.setBorderPainted(false);
        btnNovoProduto4.setContentAreaFilled(false);
        btnNovoProduto4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNovoProduto4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProduto4ActionPerformed(evt);
            }
        });

        btnFinalizar.setBackground(new java.awt.Color(234, 29, 44));
        btnFinalizar.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnFinalizar.setForeground(new java.awt.Color(255, 255, 255));
        btnFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_verificar_branco.png"))); // NOI18N
        btnFinalizar.setText("Finalizar");
        btnFinalizar.setBorder(null);
        btnFinalizar.setBorderPainted(false);
        btnFinalizar.setContentAreaFilled(false);
        btnFinalizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        jlNomeProduto2.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlNomeProduto2.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeProduto2.setText("Motoboy:");

        jlNomeMotoboy.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        jlNomeMotoboy.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeMotoboy.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlNomeMotoboy.setText("Nome do Motoboy");

        jlFormaDePagamento.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlFormaDePagamento.setForeground(new java.awt.Color(255, 255, 255));
        jlFormaDePagamento.setText("Categoria:");

        cmbFormaDePagamento.setFont(new java.awt.Font("Sul Sans", 0, 13)); // NOI18N
        cmbFormaDePagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jpConfirmacaoLayout = new javax.swing.GroupLayout(jpConfirmacao);
        jpConfirmacao.setLayout(jpConfirmacaoLayout);
        jpConfirmacaoLayout.setHorizontalGroup(
            jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCadastros, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                                .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlNomeProduto)
                                    .addComponent(jlNomeProduto1)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpConfirmacaoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                                        .addComponent(jlFormaDePagamento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbFormaDePagamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jlNomeProduto2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jlNomeMotoboy, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(31, 31, 31))))
                    .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(btnNovoProduto4)
                        .addGap(18, 18, 18)
                        .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlDesconto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlSubtotal1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlComissao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpConfirmacaoLayout.setVerticalGroup(
            jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConfirmacaoLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jlCadastros)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jlNomeProduto1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlNomeCliente)
                .addGap(18, 18, 18)
                .addComponent(jlNomeProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNomeProduto2)
                    .addComponent(jlNomeMotoboy))
                .addGap(22, 22, 22)
                .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlFormaDePagamento)
                    .addComponent(cmbFormaDePagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jlSubtotal1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlComissao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlDesconto)
                .addGap(42, 42, 42)
                .addComponent(jlTotal)
                .addGap(40, 40, 40)
                .addGroup(jpConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoProduto4)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        getContentPane().add(jpConfirmacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jpSelecionarProdutos.setBackground(new java.awt.Color(234, 29, 44));
        jpSelecionarProdutos.setMaximumSize(null);
        jpSelecionarProdutos.setPreferredSize(new java.awt.Dimension(360, 640));

        cmbProdutos.setFont(new java.awt.Font("Sul Sans", 0, 13)); // NOI18N
        cmbProdutos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProdutosActionPerformed(evt);
            }
        });

        jlDescricaoProduto1.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlDescricaoProduto1.setForeground(new java.awt.Color(255, 255, 255));
        jlDescricaoProduto1.setText("Selecione um produto:");

        btnAdicionarProduto.setBackground(new java.awt.Color(234, 29, 44));
        btnAdicionarProduto.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnAdicionarProduto.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_adicionar_branco.png"))); // NOI18N
        btnAdicionarProduto.setText("Adicionar");
        btnAdicionarProduto.setBorder(null);
        btnAdicionarProduto.setBorderPainted(false);
        btnAdicionarProduto.setContentAreaFilled(false);
        btnAdicionarProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoActionPerformed(evt);
            }
        });

        btnVoltarProduto.setBackground(new java.awt.Color(234, 29, 44));
        btnVoltarProduto.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnVoltarProduto.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_voltar_branco.png"))); // NOI18N
        btnVoltarProduto.setText("Voltar");
        btnVoltarProduto.setBorder(null);
        btnVoltarProduto.setBorderPainted(false);
        btnVoltarProduto.setContentAreaFilled(false);
        btnVoltarProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarProdutoActionPerformed(evt);
            }
        });

        jlDescricaoProduto2.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlDescricaoProduto2.setForeground(new java.awt.Color(255, 255, 255));
        jlDescricaoProduto2.setText("Quantidade:");

        jlSubtotal.setFont(new java.awt.Font("Sul Sans", 0, 24)); // NOI18N
        jlSubtotal.setForeground(new java.awt.Color(255, 255, 255));
        jlSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSubtotal.setText("Subtotal: R$0.00");

        jsQuantidade.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jsQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnAvancarProduto.setBackground(new java.awt.Color(234, 29, 44));
        btnAvancarProduto.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnAvancarProduto.setForeground(new java.awt.Color(255, 255, 255));
        btnAvancarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_avancar_branco.png"))); // NOI18N
        btnAvancarProduto.setText("Avançar");
        btnAvancarProduto.setBorder(null);
        btnAvancarProduto.setBorderPainted(false);
        btnAvancarProduto.setContentAreaFilled(false);
        btnAvancarProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAvancarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarProdutoActionPerformed(evt);
            }
        });

        jlTituloSelecionarProdutos.setFont(new java.awt.Font("Sul Sans", 0, 24)); // NOI18N
        jlTituloSelecionarProdutos.setForeground(new java.awt.Color(255, 255, 255));
        jlTituloSelecionarProdutos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTituloSelecionarProdutos.setText("Selecionar Produtos");

        javax.swing.GroupLayout jpSelecionarProdutosLayout = new javax.swing.GroupLayout(jpSelecionarProdutos);
        jpSelecionarProdutos.setLayout(jpSelecionarProdutosLayout);
        jpSelecionarProdutosLayout.setHorizontalGroup(
            jpSelecionarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlSubtotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSelecionarProdutosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpSelecionarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDescricaoProduto2)
                    .addComponent(jlDescricaoProduto1)
                    .addGroup(jpSelecionarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnVoltarProduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAvancarProduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                    .addGroup(jpSelecionarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpSelecionarProdutosLayout.createSequentialGroup()
                            .addComponent(jsQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdicionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cmbProdutos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSelecionarProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTituloSelecionarProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpSelecionarProdutosLayout.setVerticalGroup(
            jpSelecionarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSelecionarProdutosLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jlTituloSelecionarProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(jlDescricaoProduto1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlDescricaoProduto2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpSelecionarProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdicionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpSelecionarProdutosLayout.createSequentialGroup()
                        .addComponent(jsQuantidade)
                        .addGap(3, 3, 3)))
                .addGap(91, 91, 91)
                .addComponent(jlSubtotal)
                .addGap(64, 64, 64)
                .addComponent(btnAvancarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVoltarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        getContentPane().add(jpSelecionarProdutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jpLogin.setBackground(new java.awt.Color(234, 29, 44));
        jpLogin.setMaximumSize(new java.awt.Dimension(360, 640));
        jpLogin.setMinimumSize(new java.awt.Dimension(360, 640));
        jpLogin.setPreferredSize(new java.awt.Dimension(360, 640));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/uaifood_logo.jpg"))); // NOI18N

        btnEntrar.setBackground(new java.awt.Color(234, 29, 44));
        btnEntrar.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnEntrar.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_entrar_branco.png"))); // NOI18N
        btnEntrar.setText("Entrar");
        btnEntrar.setBorder(null);
        btnEntrar.setBorderPainted(false);
        btnEntrar.setContentAreaFilled(false);
        btnEntrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        jlEmail.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlEmail.setForeground(new java.awt.Color(255, 255, 255));
        jlEmail.setText("Email:");

        txtEmail.setBackground(new java.awt.Color(234, 29, 44));
        txtEmail.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        jlSenha.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlSenha.setForeground(new java.awt.Color(255, 255, 255));
        jlSenha.setText("Senha:");

        txtSenha.setBackground(new java.awt.Color(234, 29, 44));
        txtSenha.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        txtSenha.setForeground(new java.awt.Color(255, 255, 255));
        txtSenha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        txtSenha.setSelectionColor(new java.awt.Color(160, 35, 49));

        jlErro.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlErro.setForeground(new java.awt.Color(255, 255, 255));
        jlErro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnEntrar1.setBackground(new java.awt.Color(234, 29, 44));
        btnEntrar1.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnEntrar1.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_registrar_branco.png"))); // NOI18N
        btnEntrar1.setText("Registrar");
        btnEntrar1.setBorder(null);
        btnEntrar1.setBorderPainted(false);
        btnEntrar1.setContentAreaFilled(false);
        btnEntrar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEntrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpLoginLayout = new javax.swing.GroupLayout(jpLogin);
        jpLogin.setLayout(jpLoginLayout);
        jpLoginLayout.setHorizontalGroup(
            jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLoginLayout.createSequentialGroup()
                .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpLoginLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlSenha)
                            .addComponent(jlEmail)
                            .addGroup(jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnEntrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSenha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(btnEntrar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jpLoginLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(logo)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addComponent(jlErro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpLoginLayout.setVerticalGroup(
            jpLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLoginLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEntrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlErro, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        getContentPane().add(jpLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 360, 640));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        // TODO add your handling code here:
        String email = txtEmail.getText();
        String senha = String.valueOf(txtSenha.getPassword());
        
        if (email.equals("") || senha.equals("")) {
            jlErro.setText("Por favor, preencha todos os campos!");
            jlErro.setVisible(true);
            return;
        }
        
        try {
            if (login(email, senha)) {
                this.setTitle("Selecionar Produtos"); // troca o título da página
                carrinho = new ArrayList<ItemPedido>();
                carregarProdutos();
                
                jpLogin.setVisible(false);
                jpSelecionarProdutos.setVisible(true);
            } else {
                jlErro.setText("As credenciais estão incorretas!");
                jlErro.setVisible(true);
            }
        } catch (IOException ex) {
            Logger.getLogger(RealizarPedido.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao carregar o banco de dados!", "Erro", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void btnEntrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrar1ActionPerformed
        // TODO add your handling code here:
        new CadastroCliente().setVisible(true);
    }//GEN-LAST:event_btnEntrar1ActionPerformed

    private void btnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoActionPerformed
        // TODO add your handling code here:
        if (cmbProdutos.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um produto.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // tela de edição visível
        int indice_produto = cmbProdutos.getSelectedIndex() - 1;
        Produto produto = produtos.get(indice_produto);
        int quantidade = (Integer)jsQuantidade.getValue();
        
        carrinho.add(new ItemPedido(quantidade, quantidade * produto.getValorAtual(), produto));
        
        // atualiza o valor total
        jlSubtotal.setText("Subtotal R$" + String.format("%.2f", getValorTotal()));
        
        // valores do objeto original
        cmbProdutos.setSelectedIndex(0);
        jsQuantidade.setValue(1);
    }//GEN-LAST:event_btnAdicionarProdutoActionPerformed

    private void btnVoltarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarProdutoActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarProdutoActionPerformed

    private void btnAvancarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarProdutoActionPerformed
        // TODO add your handling code here:
        if (getValorTotal() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, adicione pelo menos um produto.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // escolhe o primeiro motoboy disponível
        Motoboy motoboy = motoboysDisponiveis.get(0);
        
        this.setTitle("Confirmação"); // troca o título da página

        jpLogin.setVisible(false);
        jpSelecionarProdutos.setVisible(false);
        jpConfirmacao.setVisible(true);
        
        jlNomeCliente.setText(cliente.getNome());
        jtaEndereco.setText(cliente.getEndereco());
        jlNomeMotoboy.setText(motoboy.getNome());
        
        jlSubtotal1.setText("Subtotal: R$" + String.format("%.2f", getValorTotal()));
        jlComissao.setText("Frete: R$" + String.format("%.2f", getValorTotal()*motoboy.getComissao()));
        jlDesconto.setText("Desconto: R$" + String.format("%.2f", (getValorTotalSemDesconto() - getValorTotal())));
        
        jlTotal.setText("Total: R$" + String.format("%.2f", (getValorTotal() + getValorTotal()*motoboy.getComissao())));
    }//GEN-LAST:event_btnAvancarProdutoActionPerformed

    private void cmbProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProdutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProdutosActionPerformed

    private void btnNovoProduto4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProduto4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnNovoProduto4ActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        // TODO add your handling code here:

        Motoboy motoboy = motoboysDisponiveis.get(0);
        String tipoDePagamento = cmbFormaDePagamento.getSelectedItem().toString();
        float frete = getValorTotal()*motoboy.getComissao();
        float precoTotal = getValorTotal() + getValorTotal()*motoboy.getComissao();
        String endereco = jtaEndereco.getText();
        
        // Checa se o campo de endereço não está vazio
        if (CheckDados.ehVazio(endereco)) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Checa se foi selecionado uma forma de pagamento
        if (cmbFormaDePagamento.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione uma forma de pagamento.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            new Pedido(0, tipoDePagamento, frete, precoTotal, endereco, cliente, motoboy, carrinho);

            motoboy.setDisponibilidade(false);
            ManipuladorArquivo.editar(motoboy);
            
            JOptionPane.showMessageDialog(null, "Pedido finalizado com sucesso!", "Pedido realizado", JOptionPane.PLAIN_MESSAGE);
            this.setVisible(false);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao finalizar o pedido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RealizarPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarProduto;
    private javax.swing.JButton btnAvancarProduto;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnEntrar1;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnNovoProduto4;
    private javax.swing.JButton btnVoltarProduto;
    private javax.swing.JComboBox<String> cmbFormaDePagamento;
    private javax.swing.JComboBox<String> cmbProdutos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jlCadastros;
    private javax.swing.JLabel jlComissao;
    private javax.swing.JLabel jlDesconto;
    private javax.swing.JLabel jlDescricaoProduto1;
    private javax.swing.JLabel jlDescricaoProduto2;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlErro;
    private javax.swing.JLabel jlFormaDePagamento;
    private javax.swing.JLabel jlNomeCliente;
    private javax.swing.JLabel jlNomeMotoboy;
    private javax.swing.JLabel jlNomeProduto;
    private javax.swing.JLabel jlNomeProduto1;
    private javax.swing.JLabel jlNomeProduto2;
    private javax.swing.JLabel jlSenha;
    private javax.swing.JLabel jlSubtotal;
    private javax.swing.JLabel jlSubtotal1;
    private javax.swing.JLabel jlTituloSelecionarProdutos;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JPanel jpConfirmacao;
    private javax.swing.JPanel jpLogin;
    private javax.swing.JPanel jpSelecionarProdutos;
    private javax.swing.JSpinner jsQuantidade;
    private javax.swing.JTextArea jtaEndereco;
    private javax.swing.JLabel logo;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables

    private boolean login(String emailUsuario, String senhaUsuario) throws IOException {
        ArrayList<Cliente> clientes = ManipuladorArquivo.carregarClientes(); // carrega clientes do banco de dados
        
        for (int i = 0; i < clientes.size(); i++) {
            // verifica credenciais
            if (clientes.get(i).getEmail().equals(emailUsuario) && clientes.get(i).getSenha().equals(senhaUsuario)) {
                cliente = clientes.get(i);
                return true;
            }
        }
        
        return false;
    }
    
    private void carregarProdutos() {
        try {
            produtos = ManipuladorArquivo.carregarProdutos();
            ArrayList<String> nomes_produtos = new ArrayList();
            
            nomes_produtos.add("Selecione um produto");
            for (Produto produto : produtos) {
                nomes_produtos.add("R$" + String.format("%.2f", produto.getValorAtual()) + " - " + produto.getNome());
            }
            
            MyComboBoxModel myModel = new MyComboBoxModel(nomes_produtos.toArray(new String[0]));
            cmbProdutos.setModel(myModel);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao carregar os produtos!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private float getValorTotal() {
        float total = 0;
        
        // pega o valor total do pedido
        for (ItemPedido item : carrinho) {
            total += item.getSubTotal();
        }
        
        return total;
    }
    
    private float getValorTotalSemDesconto() {
        float total = 0;
        
        // pega o valor total do pedido
        for (ItemPedido item : carrinho) {
            total += item.getSubTotalSemDesconto();
        }
        
        return total;
    }

    private void carregarMotoboysDisponiveis() throws IOException {
        ArrayList<Motoboy> motoboys = ManipuladorArquivo.carregarMotoboys();
        
        // adiciona somente os disponíveis
        for (Motoboy motoboy : motoboys) {
            if (motoboy.isDisponivel())
                motoboysDisponiveis.add(motoboy);
        }
    }
    
    private void carregarMetodosDePagamento() {
        cmbFormaDePagamento.removeAllItems();

        cmbFormaDePagamento.addItem("Selecione a forma de pagamento");
        cmbFormaDePagamento.addItem("Dinheiro (na entrega)"); // o motoboy recebe
        cmbFormaDePagamento.addItem("Cartão (na entrega)"); // o motoboy levaria a maquininha
        cmbFormaDePagamento.addItem("Pix (por CPF)"); // cliente tem que ter um pix cadastrado com o cpf dele
        cmbFormaDePagamento.addItem("Pix (por telefone)"); // cliente tem que ter um pix cadastrado com o telefone dele
    }
}
