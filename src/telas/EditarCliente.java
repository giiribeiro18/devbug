/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import classes.CheckDados;
import classes.Cliente;
import classes.ManipuladorArquivo;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.ResolverStyle;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Eduardo
 */

public class EditarCliente extends javax.swing.JFrame {
    private ArrayList<Cliente> clientes;
    
    /**
     * Creates new form CadastroProduto
     */
    public EditarCliente() {
        initComponents();
        
        jpSelecionarCliente.setVisible(true);
        jpEditarCliente.setVisible(false);
        
        carregarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpSelecionarCliente = new javax.swing.JPanel();
        cmbClientes = new javax.swing.JComboBox<>();
        jlDescricaoCliente = new javax.swing.JLabel();
        btnEditarCliente = new javax.swing.JButton();
        btnVoltarCliente = new javax.swing.JButton();
        jpEditarCliente = new javax.swing.JPanel();
        jlTituloCliente = new javax.swing.JLabel();
        btnCancelarCliente = new javax.swing.JButton();
        btnSalvarCliente = new javax.swing.JButton();
        jlNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jlEmailCliente = new javax.swing.JLabel();
        txtEmailCliente = new javax.swing.JTextField();
        jlCpfCliente = new javax.swing.JLabel();
        txtCpfCliente = new javax.swing.JFormattedTextField();
        jlSenhaCliente = new javax.swing.JLabel();
        txtSenhaCliente = new javax.swing.JPasswordField();
        jlDataNascimentoCliente = new javax.swing.JLabel();
        txtDataNascimentoCliente = new javax.swing.JFormattedTextField();
        jlTelefoneCliente = new javax.swing.JLabel();
        txtTelefoneCliente = new javax.swing.JFormattedTextField();
        jlEnderecoCliente = new javax.swing.JLabel();
        txtEnderecoCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Selecionar Cliente");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_uaifood.png")).getImage());
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(null);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpSelecionarCliente.setBackground(new java.awt.Color(234, 29, 44));
        jpSelecionarCliente.setMaximumSize(null);
        jpSelecionarCliente.setPreferredSize(new java.awt.Dimension(360, 640));

        cmbClientes.setFont(new java.awt.Font("Sul Sans", 0, 13)); // NOI18N
        cmbClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesActionPerformed(evt);
            }
        });

        jlDescricaoCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlDescricaoCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlDescricaoCliente.setText("Selecione um cliente:");

        btnEditarCliente.setBackground(new java.awt.Color(234, 29, 44));
        btnEditarCliente.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnEditarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnEditarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_editar_branco.png"))); // NOI18N
        btnEditarCliente.setText("Editar");
        btnEditarCliente.setBorder(null);
        btnEditarCliente.setBorderPainted(false);
        btnEditarCliente.setContentAreaFilled(false);
        btnEditarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnVoltarCliente.setBackground(new java.awt.Color(234, 29, 44));
        btnVoltarCliente.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnVoltarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_voltar_branco.png"))); // NOI18N
        btnVoltarCliente.setText("Voltar");
        btnVoltarCliente.setBorder(null);
        btnVoltarCliente.setBorderPainted(false);
        btnVoltarCliente.setContentAreaFilled(false);
        btnVoltarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSelecionarClienteLayout = new javax.swing.GroupLayout(jpSelecionarCliente);
        jpSelecionarCliente.setLayout(jpSelecionarClienteLayout);
        jpSelecionarClienteLayout.setHorizontalGroup(
            jpSelecionarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSelecionarClienteLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jpSelecionarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnEditarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(cmbClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlDescricaoCliente, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltarCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addGap(53, 53, 53))
        );
        jpSelecionarClienteLayout.setVerticalGroup(
            jpSelecionarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSelecionarClienteLayout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addComponent(jlDescricaoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVoltarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );

        getContentPane().add(jpSelecionarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jpEditarCliente.setBackground(new java.awt.Color(234, 29, 44));
        jpEditarCliente.setPreferredSize(new java.awt.Dimension(360, 640));

        jlTituloCliente.setFont(new java.awt.Font("Sul Sans", 0, 24)); // NOI18N
        jlTituloCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlTituloCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTituloCliente.setText("Editar Cliente");

        btnCancelarCliente.setBackground(new java.awt.Color(234, 29, 44));
        btnCancelarCliente.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnCancelarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_fechar_branco.png"))); // NOI18N
        btnCancelarCliente.setText("Cancelar");
        btnCancelarCliente.setBorder(null);
        btnCancelarCliente.setBorderPainted(false);
        btnCancelarCliente.setContentAreaFilled(false);
        btnCancelarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarClienteActionPerformed(evt);
            }
        });

        btnSalvarCliente.setBackground(new java.awt.Color(234, 29, 44));
        btnSalvarCliente.setFont(new java.awt.Font("Sul Sans", 0, 18)); // NOI18N
        btnSalvarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_verificar_branco.png"))); // NOI18N
        btnSalvarCliente.setText("Salvar");
        btnSalvarCliente.setBorder(null);
        btnSalvarCliente.setBorderPainted(false);
        btnSalvarCliente.setContentAreaFilled(false);
        btnSalvarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarClienteActionPerformed(evt);
            }
        });

        jlNomeCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeCliente.setText("Nome:");

        txtNomeCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtNomeCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        txtNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtNomeCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        jlEmailCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlEmailCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlEmailCliente.setText("Email:");

        txtEmailCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtEmailCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        txtEmailCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtEmailCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        jlCpfCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlCpfCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlCpfCliente.setText("CPF:");

        txtCpfCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtCpfCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        txtCpfCliente.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N

        jlSenhaCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlSenhaCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlSenhaCliente.setText("Senha:");

        txtSenhaCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtSenhaCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        txtSenhaCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtSenhaCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        jlDataNascimentoCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlDataNascimentoCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlDataNascimentoCliente.setText("Data de nascimento:");

        txtDataNascimentoCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtDataNascimentoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        txtDataNascimentoCliente.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtDataNascimentoCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNascimentoCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        txtDataNascimentoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataNascimentoClienteFocusLost(evt);
            }
        });
        txtDataNascimentoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataNascimentoClienteActionPerformed(evt);
            }
        });

        jlTelefoneCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlTelefoneCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlTelefoneCliente.setText("Telefone:");

        txtTelefoneCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtTelefoneCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        txtTelefoneCliente.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtTelefoneCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefoneCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N

        jlEnderecoCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        jlEnderecoCliente.setForeground(new java.awt.Color(255, 255, 255));
        jlEnderecoCliente.setText("Endereço (Bairro):");

        txtEnderecoCliente.setBackground(new java.awt.Color(234, 29, 44));
        txtEnderecoCliente.setFont(new java.awt.Font("Sul Sans", 0, 14)); // NOI18N
        txtEnderecoCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtEnderecoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        javax.swing.GroupLayout jpEditarClienteLayout = new javax.swing.GroupLayout(jpEditarCliente);
        jpEditarCliente.setLayout(jpEditarClienteLayout);
        jpEditarClienteLayout.setHorizontalGroup(
            jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditarClienteLayout.createSequentialGroup()
                .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEditarClienteLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEditarClienteLayout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlTelefoneCliente)
                                    .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEmailCliente)
                                .addComponent(jlEmailCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSenhaCliente)
                                .addComponent(jlSenhaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEnderecoCliente)
                                .addComponent(jlEnderecoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNomeCliente)
                                .addComponent(jlNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlCpfCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDataNascimentoCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlDataNascimentoCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlTituloCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jpEditarClienteLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnCancelarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jpEditarClienteLayout.setVerticalGroup(
            jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditarClienteLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jlTituloCliente)
                .addGap(40, 40, 40)
                .addComponent(jlNomeCliente)
                .addGap(6, 6, 6)
                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jlEmailCliente)
                .addGap(6, 6, 6)
                .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlCpfCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlSenhaCliente)
                .addGap(6, 6, 6)
                .addComponent(txtSenhaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTelefoneCliente)
                    .addComponent(jlDataNascimentoCliente))
                .addGap(6, 6, 6)
                .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jlEnderecoCliente)
                .addGap(6, 6, 6)
                .addComponent(txtEnderecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jpEditarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        getContentPane().add(jpEditarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarClienteActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarClienteActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        // TODO add your handling code here:
        if (cmbClientes.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um cliente.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // tela de edição visível
        jpSelecionarCliente.setVisible(false);
        jpEditarCliente.setVisible(true);
        this.setTitle("Editar Cliente");
        
        int indice_produto = cmbClientes.getSelectedIndex() - 1;
        Cliente cliente = clientes.get(indice_produto);
        
        // valores do objeto original
        txtNomeCliente.setText(cliente.getNome());
        txtEmailCliente.setText(cliente.getEmail());
        txtCpfCliente.setText(cliente.getCpf());
        txtSenhaCliente.setText(cliente.getSenha());
        txtDataNascimentoCliente.setText(cliente.getDataDeNascimento());
        txtTelefoneCliente.setText(cliente.getTelefone());
        txtEnderecoCliente.setText(cliente.getEndereco());
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnSalvarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarClienteActionPerformed
        // TODO add your handling code here:
        
        int indice_cliente = cmbClientes.getSelectedIndex() - 1;
        Cliente clienteAntigo = clientes.get(indice_cliente);

        String nome = txtNomeCliente.getText();
        String email = txtEmailCliente.getText();
        String cpf = txtCpfCliente.getText().replaceAll("[\\D]", ""); // filtra os digitos
        String senha = txtSenhaCliente.getText();
        String telefone = txtTelefoneCliente.getText().replaceAll("[\\D]", ""); // filtra os digitos
        String endereco = txtEnderecoCliente.getText();
        String dataNascimento = txtDataNascimentoCliente.getText();
        
        // checa se há campos vazios
        if (CheckDados.ehVazio(nome, email, cpf, senha, telefone, endereco)) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // testa se a data inserida é válida
        if (CheckDados.checaData(dataNascimento)) {
            JOptionPane.showMessageDialog(null, "Data de nascimento inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Cliente cliente = new Cliente(clienteAntigo.getCodCliente(), endereco, cpf, nome, email, senha, dataNascimento, telefone);
        try {
            ManipuladorArquivo.editar(cliente);
            JOptionPane.showMessageDialog(null, "Cliente editado com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
            this.setVisible(false);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Algo deu errado! O cliente não foi editado.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarClienteActionPerformed

    private void btnVoltarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarClienteActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarClienteActionPerformed

    private void cmbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClientesActionPerformed

    private void txtDataNascimentoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataNascimentoClienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataNascimentoClienteFocusLost

    private void txtDataNascimentoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataNascimentoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataNascimentoClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarCliente;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnSalvarCliente;
    private javax.swing.JButton btnVoltarCliente;
    private javax.swing.JComboBox<String> cmbClientes;
    private javax.swing.JLabel jlCpfCliente;
    private javax.swing.JLabel jlDataNascimentoCliente;
    private javax.swing.JLabel jlDescricaoCliente;
    private javax.swing.JLabel jlEmailCliente;
    private javax.swing.JLabel jlEnderecoCliente;
    private javax.swing.JLabel jlNomeCliente;
    private javax.swing.JLabel jlSenhaCliente;
    private javax.swing.JLabel jlTelefoneCliente;
    private javax.swing.JLabel jlTituloCliente;
    private javax.swing.JPanel jpEditarCliente;
    private javax.swing.JPanel jpSelecionarCliente;
    private javax.swing.JFormattedTextField txtCpfCliente;
    private javax.swing.JFormattedTextField txtDataNascimentoCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtEnderecoCliente;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JPasswordField txtSenhaCliente;
    private javax.swing.JFormattedTextField txtTelefoneCliente;
    // End of variables declaration//GEN-END:variables

    private void carregarClientes() {
        try {
            clientes = ManipuladorArquivo.carregarClientes();
            ArrayList<String> nomes_clientes = new ArrayList();
            
            nomes_clientes.add("Selecione um cliente");
            clientes.forEach(cliente -> {
                nomes_clientes.add(String.valueOf(cliente.getCodCliente()) + " - " + cliente.getNome());
            });
            
            MyComboBoxModel myModel = new MyComboBoxModel(nomes_clientes.toArray(new String[0]));
            cmbClientes.setModel(myModel);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao carregar os clientes!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
}
